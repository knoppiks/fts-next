networks:
  agents:
  clinical-domain:
  research-domain:
  trust-center:
  gics:
  gpas:

services:
  # Clinical Domain
  cd-agent:
    image: clinical-domain-agent:latest
    ports: [ ":8080" ]
    networks: [ "agents", "clinical-domain" ]
    volumes:
    - ./cd-agent/projects:/app/projects
    - ./deidentifhir/:/app/config/deidentifhir
    depends_on:
      cd-hds:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
  cd-hds:
    image: samply/blaze:0.29.1@sha256:3f267702ecbaa6ac00486e2e3c3b739ec31786ec15133d469d0b740cad073b8c
    ports: [ ":8080" ]
    networks: [ "clinical-domain" ]
    environment:
      BASE_URL: "http://cd-hds:8080"
      STORAGE: "in-memory"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s

  # Research Domain
  rd-agent:
    image: research-domain-agent:latest
    ports: [ ":8080" ]
    networks: [ "agents", "research-domain" ]
    volumes:
    - ./rd-agent/projects:/app/projects
    - ./deidentifhir/:/app/config/deidentifhir
    depends_on:
      rd-hds:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
  rd-hds:
    image: samply/blaze:0.29.1@sha256:3f267702ecbaa6ac00486e2e3c3b739ec31786ec15133d469d0b740cad073b8c
    ports: [ ":8080" ]
    networks: [ "research-domain" ]
    environment:
      BASE_URL: "http://rd-hds:8080"
      STORAGE: "in-memory"
      ENFORCE_REFERENTIAL_INTEGRITY: "false"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s

  # Trust Center
  tc-agent:
    image: trust-center-agent:latest
    networks: [ "agents", "trust-center" ]
    depends_on:
      keystore:
        condition: service_started
      gics:
        condition: service_healthy
      gpas:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
  keystore:
    image: valkey/valkey:7.2.5-alpine@sha256:4054fe7fc607b9326ac7c4691ed26e9670d2ff17a9fb28c2577adecf928acbcc
    networks: [ "trust-center" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  gics:
    image: creg.smith.care/fts/gics:2023.1.4@sha256:093f317ad936ff8595105bf21abccd4ad33ddd066d132e5ba34d5b37e5b8bd62
    ports: [ ":8080" ]
    networks: [ "trust-center", "gics" ]
    depends_on:
      gics-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/gics/gicsService?wsdl" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
  gics-db:
    image: mysql:9.0.1@sha256:d8df069848906979fd7511db00dc22efeb0a33a990d87c3c6d3fcdafd6fc6123
    volumes:
    - ./gics/initdb/:/docker-entrypoint-initdb.d
    command: --max_allowed_packet=20M --default-time-zone=Europe/Berlin
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gics
      MYSQL_USER: gics_user
      MYSQL_PASSWORD: gics_password
    networks: [ "gics" ]
    healthcheck:
      test: [ "CMD", "/usr/bin/mysqladmin", "ping", "-h", "localhost", "-ugics_user", "-pgics_password" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
  gpas:
    image: creg.smith.care/fts/gpas:2023.1.2@sha256:6ccc25c108060fe7dce34a776c60b24139b655796c51256600a86ad3d71818f6
    ports: [ ":8080" ]
    networks: [ "trust-center", "gpas" ]
    depends_on:
      gpas-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/gpas/gpasService?wsdl" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
  gpas-db:
    image: mysql:9.0.1@sha256:d8df069848906979fd7511db00dc22efeb0a33a990d87c3c6d3fcdafd6fc6123
    volumes:
    - ./gpas/initdb/:/docker-entrypoint-initdb.d
    command: --max_allowed_packet=20M --default-time-zone=Europe/Berlin
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gpas
      MYSQL_USER: gpas_user
      MYSQL_PASSWORD: gpas_password
    networks: [ "gpas" ]
    healthcheck:
      test: [ "CMD", "/usr/bin/mysqladmin", "ping", "-h", "localhost", "-ugpas_user", "-pgpas_password" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
